service: nat-sls

provider:
  name: aws
  apiName: nat_api
  region: eu-west-1
  stage: dev
  memorySize: 256
  runtime: nodejs12.x
  role: LambdaRole
  environment:

package:
  individually: true

resources:
  Resources:
    LambdaRole: ${file(./resource/LambdaRole.yml)}
    LambdaSecurityGroup: ${file(./resource/LambdaSecurityGroup.yml)}
    ServerlessVPC: ${file(./resource/ServerlessVPC.yml)}
    ServerlessVPCGA: ${file(./resource/ServerlessVPCGA.yml)}
    ServerlessSubnetA: ${file(./resource/ServerlessSubnetA.yml)}
    ServerlessSubnetB: ${file(./resource/ServerlessSubnetB.yml)}
    ServerlessSubnetC: ${file(./resource/ServerlessSubnetC.yml)}
    ServerlessSubnetGroup: ${file(./resource/ServerlessSubnetGroup.yml)}
    ServerlessInternetGateway: ${file(./resource/ServerlessInternetGateway.yml)}
    # ServerlessSecurityGroup: ${file(./resource/ServerlessSecurityGroup.yml)}
    BastionRouteTable: ${file(./resource/BastionRouteTable.yml)}
    BastionRoute: ${file(./resource/BastionRoute.yml)}
    PublicSubnet: ${file(./resource/PublicSubnet.yml)}
    PublicSubnetAssociation: ${file(./resource/PublicSubnetAssociation.yml)}
    # PostgreSqlRDSInstance: ${file(./resource/PostgreSqlRDSInstance.yml)}
    NatInstance: ${file(./resource/NatInstance.yml)}
    # BastionSSH: ${file(./resource/BastionSSH.yml)}
    # DBSSH: ${file(./resource/DBSSH.yml)}
    # BastionConnectivity: ${file(./resource/BastionConnectivity.yml)}

functions:
  graphql:
    vpc:
      securityGroupIds:
        - !GetAtt LambdaSecurityGroup.GroupId
      subnetIds:
        - Ref: ServerlessSubnetA
        - Ref: ServerlessSubnetB
        - Ref: ServerlessSubnetC
    handler: src/index.handler
    events:
      - http:
          path: /testFn
          method: get
          cors: true
